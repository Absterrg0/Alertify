generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String     @id @default(uuid())
  name              String?    @unique
  email             String?    @unique
  apiKey            String?     @unique
  registeredWebsites Website[]
  alerts            Alert[]    // Changed name for consistency
  plan              PlanStatus @default(FREE)
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  apiRequests     ApiRequest[]
}

model Website {
  id         String   @id @default(uuid())
  name       String   
  isVerified Boolean  @default(false)
  url        String   @db.VarChar(2048) @unique
  status     WebsiteStatus  @default(ACTIVE)
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([userId])
}

model Alert {
  id              String     @id @default(uuid())
  title           String
  description     String
  type            LayoutType // Changed to match enum name
  style           StyleType  // Changed to match enum name
  backgroundColor String
  textColor       String
  borderColor     String
  imageUrl        String?    // Made optional and renamed for clarity
  userId          String
  user            User       @relation(fields: [userId], references: [id])
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  @@index([userId])
}


model ApiRequest{
  id    String    @id@default(uuid())
  userId  String
  user    User    @relation(fields: [userId],references: [id])
  timestamp DateTime  @default(now())
  endpoint  String
  success Boolean


  @@index([userId,timestamp])
}


enum LayoutType {
  ALERT
  ALERT_DIALOG
  TOAST
}

enum StyleType {
  NATIVE
  GRADIENT
  LOGO
}

enum PlanStatus {
  FREE
  PREMIUM
  ENTERPRISE
}

enum WebsiteStatus { 
  ACTIVE
  DEACTIVATED
}